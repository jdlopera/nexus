---
// Importaciones
import { Instagram, Linkedin, Twitter, Calendar, Tag } from "lucide-react";
// Astro tiene su propio componente de imagen optimizada
import { Image } from "astro:assets";

// Definir los props que acepta el componente
interface Author {
  name: string;
  role?: string;
  avatar: string;
}

interface RecentPost {
  title: string;
  date: string;
  url: string;
}

interface TOCItem {
  title: string;
  id: string;
}

export interface Props {
  title: string;
  author: Author;
  publishDate: string;
  tags: string[];
  heroImage: string;
  recentPosts: RecentPost[];
  tableOfContents: TOCItem[];
  content: string;
}

// Obtener las props
const {
  title,
  author,
  publishDate,
  tags,
  heroImage,
  recentPosts,
  tableOfContents,
  content,
} = Astro.props;

// Formatear la fecha de publicación
const formatDate = (dateString: string) => {
  try {
    const date = new Date(dateString);
    return new Intl.DateTimeFormat("es-ES", {
      year: "numeric",
      month: "long",
      day: "numeric",
    }).format(date);
  } catch (error) {
    return dateString;
  }
};

const formattedDate = formatDate(publishDate);
---

<div class="container bg-background py-4 md:py-16 mt-fl-2xl">
  <header class="relative">
    <div class="relative aspect-[9/16] w-full rounded-lg sm:aspect-video">
      <Image
        src={heroImage ||
          "https://nexuspcgroup.com/wp-content/uploads/2025/03/img-test.avif"}
        alt={`Imagen destacada para ${title}`}
        width={1280}
        height={720}
        class="absolute inset-0 h-full w-full rounded-lg object-cover object-center"
        sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
      />
      <div class="absolute inset-0 rounded-lg bg-black/50"></div>
      <div
        class="absolute rounded-lg inset-0 flex flex-col justify-end bg-gradient-to-t from-black/80 to-transparent p-4 md:p-8"
      >
        <div class="container">
          <h1
            class="mb-4 text-3xl font-bold text-white sm:text-4xl md:text-6xl lg:text-8xl"
          >
            {title}
          </h1>
          <div class="mb-6 flex items-center space-x-4">
            <Image
              src={author.avatar || "/placeholder.svg"}
              alt={`Avatar de ${author.name}`}
              width={40}
              height={40}
              class="size-10 rounded-full"
            />
            <div>
              <p class="font-semibold text-white">{author.name}</p>
              {
                author.role && (
                  <p class="text-sm text-gray-300">{author.role}</p>
                )
              }
            </div>
          </div>
          <div
            class="flex flex-col space-y-2 text-sm text-gray-300 sm:flex-row sm:items-center sm:space-x-4 sm:space-y-0"
          >
            <div class="flex items-center">
              <Calendar className="mr-2 size-4" />
              <span>Publicado el {formattedDate}</span>
            </div>
            {
              tags.length > 0 && (
                <div class="flex items-center">
                  <Tag className="mr-2 size-4" />
                  <span>{tags.join(", ")}</span>
                </div>
              )
            }
          </div>
        </div>
      </div>
    </div>
  </header>

  <section class="py-4 md:py-12">
    <div class="flex flex-col items-start gap-0 sm:gap-8 md:flex-row">
      <aside class="mb-8 w-full md:sticky md:top-20 md:mb-0 md:w-1/3 lg:w-1/4">
        <div class="mb-6">
          <div class="flex items-center space-x-4">
            <a href="#" class="text-muted-foreground hover:text-foreground">
              <Instagram className="size-5" />
            </a>
            <a href="#" class="text-muted-foreground hover:text-foreground">
              <Linkedin className="size-5" />
            </a>
            <a href="#" class="text-muted-foreground hover:text-foreground">
              <Twitter className="size-5" />
            </a>
          </div>
        </div>
        {
          tableOfContents.length > 0 && (
            <div class="mb-8 rounded-lg bg-accent p-6 bg-[var(--color-gris-oscuro)] text-white">
              <h2 class="mb-4 text-lg font-semibold">Tabla de Contenido</h2>
              <nav>
                <ul class="space-y-2">
                  {tableOfContents.map((item) => (
                    <li>
                      <a
                        href={`#${item.id}`}
                        class="text-sm text-muted-foreground hover:text-foreground"
                      >
                        {item.title}
                      </a>
                    </li>
                  ))}
                </ul>
              </nav>
            </div>
          )
        }
        {
          recentPosts.length > 0 && (
            <div class="rounded-lg bg-accent p-6 bg-[var(--color-gris-oscuro)] text-white">
              <h2 class="mb-4 text-lg font-semibold">Artículos Recientes</h2>
              <ul class="space-y-4">
                {recentPosts.map((post) => (
                  <li>
                    <a href={post.url} class="block">
                      <h3 class="text-sm font-medium hover:text-foreground">
                        {post.title}
                      </h3>
                      <p class="text-xs text-muted-foreground">
                        {formatDate(post.date)}
                      </p>
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          )
        }
      </aside>
      <article
        class="prose prose-sm w-full max-w-none dark:prose-invert sm:prose-base lg:prose-lg md:w-2/3 lg:w-3/4 text-base"
        set:html={content}
      />
    </div>
  </section>
</div>
