---
import { getI18N } from "../i18n/";
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import CallActions from "./btns/CallActions.astro";

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

interface Props {
  urlImgHero: string;
  overlayType?: "gradient" | "solid" | "none";
  overlayOpacity?: number; // 0 a 1
}

const {
  urlImgHero,
  overlayType = "gradient",
  overlayOpacity = 0.6,
} = Astro.props as Props;

const btn = [
  {
    text: t("nav.btnPrimary"),
    url: "https://wa.me/573006214037?text=Quiero%20Invertir",
    _class: "btn-primary",
  },
];

// Determinar el estilo del overlay basado en los props
let overlayStyle = "";
if (overlayType === "gradient") {
  overlayStyle = `background: linear-gradient(to right, rgba(0, 0, 0, ${overlayOpacity + 0.1}), rgba(0, 0, 0, ${overlayOpacity - 0.2}));`;
} else if (overlayType === "solid") {
  overlayStyle = `background-color: rgba(0, 0, 0, ${overlayOpacity});`;
} else {
  overlayStyle = "display: none;";
}

const i18n = getI18N({ currentLocale: currentLang });
---

<section class="video-component">
  <img class="video-component_video" src={urlImgHero ?? ""} alt="Hero image" />
  <div class="overlay" style={overlayStyle}></div>
  <div class="hero-content">
    <div class="hero-content_interno">
      <h1 class="title">
        {i18n.HERO_SMALL}
        <span>{i18n.HERO_H1}</span>
      </h1>
      <p class="description">
        {i18n.HERO_H2}
      </p>
      <div class="button-group">
        {
          btn.map((boton) => (
            <CallActions
              text={boton.text}
              url={boton.url}
              _class={boton._class}
            />
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  .video-component {
    position: relative;
    height: 90vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    container-type: inline-size;
    container-name: heroContainer;
  }

  .video-component_video {
    object-fit: cover;
    width: 100%;
    height: 100%;
    position: absolute;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 5;
  }

  .hero-content {
    color: white;
    max-width: var(--grid-max-width);
    padding-inline: var(--grid-gutter);
    margin-inline: auto;
    z-index: 8;
    position: relative;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }

  .hero-content_interno {
    max-width: var(--grid-max-width);
    margin-right: 35%;
  }

  .title {
    font-size: var(--font-5);
    font-weight: bold;
    line-height: 1.2;
    font-family: var(--Heebo);
    margin: 0;
  }
  .title span {
    background-color: var(--color-dorado);
    display: inline;
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone;
    line-height: 1.6;
  }

  .description {
    font-size: var(--font-0);
    line-height: 1.6;
    color: #cccccc;
    font-family: var(--Heebo);
    margin-right: 15%;
    margin-top: 0.5rem;
    color: #fff;
  }

  .button-group {
    margin-top: var(--espacio-3xs-2xs);
    display: flex;
    gap: 1rem;
    font-family: var(--Heebo);
  }

  @container heroContainer (width < 768px) {
    .hero-content_interno {
      margin-right: 0;
      text-align: center;
      margin: 0;
    }
    .title {
      line-height: 1;
    }
    .description {
      margin-right: 0;
    }
    .button-group {
      justify-content: space-around;
    }
  }

  @media screen and (max-width: 768px) {
    section.video-component {
      height: 90vh !important;
    }
  }
</style>
